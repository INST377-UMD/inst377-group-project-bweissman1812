{"ast":null,"code":"import _slicedToArray from\"/Users/benjaminweissman/Desktop/Coding_Projects/hebr-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Card,Box,Button,Typography}from'@mui/material';import'./App.css';import data from'./data.json';import{useState}from'react';import{useParams}from'react-router-dom';import NavBar from'./NavBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Vocab(){var _useParams=useParams(),chapterNumber=_useParams.chapterNumber,vocabType=_useParams.vocabType;return/*#__PURE__*/_jsxs(Box,{id:\"columns\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(Typography,{id:\"vocab-type\",variant:\"h4\",children:vocabType[0].toUpperCase()+vocabType.slice(1)}),/*#__PURE__*/_jsx(Box,{id:\"container\",children:data.chapters[chapterNumber][vocabType].map(function(item,index){return/*#__PURE__*/_jsx(VocabCard,{item:item,chapterNumber:chapterNumber,vocabType:vocabType},index);})})]});}function VocabCard(_ref){var item=_ref.item,chapterNumber=_ref.chapterNumber,vocabType=_ref.vocabType;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),displayEnglish=_useState2[0],setDisplayEnglish=_useState2[1];// to do: mute audio so only one is playing\nvar voiceButtonClicked=function voiceButtonClicked(item){var audio=new Audio(item.audioPath);audio.play();};return/*#__PURE__*/_jsxs(Card,{id:\"vocab-card\",children:[/*#__PURE__*/_jsx(Typography,{children:displayEnglish?item.english:item.hebrew}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){setDisplayEnglish(!displayEnglish);},children:displayEnglish?\"Hebrew\":\"English\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:function onClick(){return voiceButtonClicked(item);},children:\"Play\"})]});}export default Vocab;","map":{"version":3,"names":["Card","Box","Button","Typography","data","useState","useParams","NavBar","jsx","_jsx","jsxs","_jsxs","Vocab","_useParams","chapterNumber","vocabType","id","children","variant","toUpperCase","slice","chapters","map","item","index","VocabCard","_ref","_useState","_useState2","_slicedToArray","displayEnglish","setDisplayEnglish","voiceButtonClicked","audio","Audio","audioPath","play","english","hebrew","onClick"],"sources":["/Users/benjaminweissman/Desktop/Coding_Projects/hebr-app/src/Vocab.js"],"sourcesContent":["import { Card, Box, Button, Typography } from '@mui/material';\nimport './App.css';\nimport data from './data.json';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NavBar from './NavBar';\n\nfunction Vocab() {\n    const { chapterNumber, vocabType } = useParams();\n\n    return (\n        <Box id=\"columns\">\n            <NavBar />\n            <Typography id='vocab-type' variant='h4'>{vocabType[0].toUpperCase() + vocabType.slice(1)}</Typography>\n            <Box id=\"container\">\n                {data.chapters[chapterNumber][vocabType].map((item, index) => (\n                    <VocabCard key={index} item={item} chapterNumber={chapterNumber} vocabType={vocabType} />\n                ))}\n            </Box>\n        </Box>\n    )\n\n}\n\nfunction VocabCard({ item, chapterNumber, vocabType }) {\n    const [displayEnglish, setDisplayEnglish] = useState(true);\n\n    // to do: mute audio so only one is playing\n    const voiceButtonClicked = (item) => {\n        var audio = new Audio(item.audioPath);\n        audio.play();\n    }\n\n    return (\n        <Card id=\"vocab-card\">\n            <Typography>{displayEnglish ? item.english : item.hebrew}</Typography>\n            <Button\n                variant='contained'\n                onClick={() => {\n                    setDisplayEnglish(!displayEnglish);\n                }}\n            >\n                {displayEnglish ? \"Hebrew\" : \"English\"}\n            </Button>\n            <Button variant='contained' onClick={() => voiceButtonClicked(item)}>Play</Button>\n        </Card>\n    );\n}\n\nexport default Vocab;"],"mappings":"8IAAA,OAASA,IAAI,CAAEC,GAAG,CAAEC,MAAM,CAAEC,UAAU,KAAQ,eAAe,CAC7D,MAAO,WAAW,CAClB,MAAO,CAAAC,IAAI,KAAM,aAAa,CAC9B,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACb,IAAAC,UAAA,CAAqCP,SAAS,CAAC,CAAC,CAAxCQ,aAAa,CAAAD,UAAA,CAAbC,aAAa,CAAEC,SAAS,CAAAF,UAAA,CAATE,SAAS,CAEhC,mBACIJ,KAAA,CAACV,GAAG,EAACe,EAAE,CAAC,SAAS,CAAAC,QAAA,eACbR,IAAA,CAACF,MAAM,GAAE,CAAC,cACVE,IAAA,CAACN,UAAU,EAACa,EAAE,CAAC,YAAY,CAACE,OAAO,CAAC,IAAI,CAAAD,QAAA,CAAEF,SAAS,CAAC,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAAGJ,SAAS,CAACK,KAAK,CAAC,CAAC,CAAC,CAAa,CAAC,cACvGX,IAAA,CAACR,GAAG,EAACe,EAAE,CAAC,WAAW,CAAAC,QAAA,CACdb,IAAI,CAACiB,QAAQ,CAACP,aAAa,CAAC,CAACC,SAAS,CAAC,CAACO,GAAG,CAAC,SAACC,IAAI,CAAEC,KAAK,qBACrDf,IAAA,CAACgB,SAAS,EAAaF,IAAI,CAAEA,IAAK,CAACT,aAAa,CAAEA,aAAc,CAACC,SAAS,CAAEA,SAAU,EAAtES,KAAwE,CAAC,EAC5F,CAAC,CACD,CAAC,EACL,CAAC,CAGd,CAEA,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAqC,IAAlC,CAAAH,IAAI,CAAAG,IAAA,CAAJH,IAAI,CAAET,aAAa,CAAAY,IAAA,CAAbZ,aAAa,CAAEC,SAAS,CAAAW,IAAA,CAATX,SAAS,CAC/C,IAAAY,SAAA,CAA4CtB,QAAQ,CAAC,IAAI,CAAC,CAAAuB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnDG,cAAc,CAAAF,UAAA,IAAEG,iBAAiB,CAAAH,UAAA,IAExC;AACA,GAAM,CAAAI,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIT,IAAI,CAAK,CACjC,GAAI,CAAAU,KAAK,CAAG,GAAI,CAAAC,KAAK,CAACX,IAAI,CAACY,SAAS,CAAC,CACrCF,KAAK,CAACG,IAAI,CAAC,CAAC,CAChB,CAAC,CAED,mBACIzB,KAAA,CAACX,IAAI,EAACgB,EAAE,CAAC,YAAY,CAAAC,QAAA,eACjBR,IAAA,CAACN,UAAU,EAAAc,QAAA,CAAEa,cAAc,CAAGP,IAAI,CAACc,OAAO,CAAGd,IAAI,CAACe,MAAM,CAAa,CAAC,cACtE7B,IAAA,CAACP,MAAM,EACHgB,OAAO,CAAC,WAAW,CACnBqB,OAAO,CAAE,SAAAA,QAAA,CAAM,CACXR,iBAAiB,CAAC,CAACD,cAAc,CAAC,CACtC,CAAE,CAAAb,QAAA,CAEDa,cAAc,CAAG,QAAQ,CAAG,SAAS,CAClC,CAAC,cACTrB,IAAA,CAACP,MAAM,EAACgB,OAAO,CAAC,WAAW,CAACqB,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAP,kBAAkB,CAACT,IAAI,CAAC,EAAC,CAAAN,QAAA,CAAC,MAAI,CAAQ,CAAC,EAChF,CAAC,CAEf,CAEA,cAAe,CAAAL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}